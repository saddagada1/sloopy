// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model LinkedAccount {
    id                String  @id @default(cuid())
    userId            String
    provider          String 
    providerAccountId String
    refresh_token     String  @db.Text
    access_token      String  @db.Text
    expires_at        Int
    token_type        String
    isPremium         Boolean 
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@unique([userId, provider])
    @@index([userId])
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String 
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String? @db.Text
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model User {
    id             String           @id @default(cuid())
    name           String?          @db.Text
    username       String           @unique @db.VarChar(255)
    email          String           @unique @db.VarChar(320)
    verified       Boolean          @default(false)
    emailVerified  DateTime?
    password       String?
    image          String?          @db.Text
    accounts       Account[]
    sessions       Session[]
    linkedAccounts LinkedAccount[]
    createdAt      DateTime         @default(now())
    updatedAt      DateTime         @updatedAt

    @@index([email])
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
